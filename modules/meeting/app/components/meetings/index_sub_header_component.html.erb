<%= render(Primer::OpenProject::SubHeader.new(data: {
  controller: "filter--filters-form",
  "application-target": "dynamic",
  "filter--filters-form-output-format-value": "json",
})) do |subheader|
  subheader.with_filter_component do
    render(Meetings::MeetingFilterButtonComponent.new(query: @query, project: @project))
  end

  # subheader.with_action_button(tag: :a,
  #                              href: dynamic_path,
  #                              scheme: :primary,
  #                              mobile_icon: :plus,
  #                              mobile_label: label_text,
  #                              aria: { label: accessibility_label_text },
  #                              title: accessibility_label_text,
  #                              id: id,
  #                              test_selector: "add-meeting-button") do |button|
  #   button.with_leading_visual_icon(icon: :plus)
  #   label_text
  # end if render_create_button?

  if render_create_button?
    subheader.with_action_component do

      render Primer::Alpha::ActionMenu.new(anchor_align: :end) do |menu|
        menu.with_show_button(scheme: :primary,
                              test_selector: "op-admin-synchronized-groups--button-new",
                              aria: { label: I18n.t(:button_add) }) do |button|
          button.with_leading_visual_icon(icon: :plus)
          button.with_trailing_action_icon(icon: :"triangle-down")
          I18n.t(:label_meeting)
        end

        menu.with_item(label: I18n.t("meeting.types.structured")) do |item|
        end

        menu.with_item(label: I18n.t("meeting.types.classic")) do |item|
        end
      end

    end
  end


  subheader.with_bottom_pane_component(mt: 0) do
    render(Meetings::MeetingFiltersComponent.new(query: @query, project: @project))
  end
end %>
